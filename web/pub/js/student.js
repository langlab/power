// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module('App.Student', function(exports, top) {
    var Controller, Model, Views, _ref;
    Model = (function(_super) {

      __extends(Model, _super);

      function Model() {
        return Model.__super__.constructor.apply(this, arguments);
      }

      Model.prototype.fullName = function() {
        return "" + (this.get('firstName')) + " " + (this.get('lastName'));
      };

      return Model;

    })(Backbone.Model);
    exports.Views = Views = {};
    Views.TopBar = (function(_super) {

      __extends(TopBar, _super);

      function TopBar() {
        return TopBar.__super__.constructor.apply(this, arguments);
      }

      TopBar.prototype.tagName = 'div';

      TopBar.prototype.className = 'top-bar navbar navbar-fixed-top';

      TopBar.prototype.updateNav = function() {
        var rt;
        rt = Backbone.history.fragment.split('/')[0];
        this.$('ul.nav li').removeClass('active');
        this.$("ul.nav a[href=#" + rt + "]").parent('li').addClass('active');
        return this;
      };

      TopBar.prototype.template = function() {
        return div({
          "class": 'navbar-inner'
        }, function() {
          return div({
            "class": 'container'
          }, function() {
            a({
              "class": 'btn btn-navbar',
              'data-toggle': 'collapse',
              'data-target': '.nav-collapse'
            }, function() {
              span({
                "class": 'icon-beaker icon-large'
              });
              return span({
                "class": 'icon-reorder icon-large'
              });
            });
            return div({
              "class": 'nav-collapse'
            }, function() {
              ul({
                "class": 'nav'
              }, function() {
                li(function() {
                  return a({
                    "class": 'brand pull-left',
                    href: '#'
                  }, function() {
                    return i({
                      "class": 'icon-bolt'
                    });
                  });
                });
                li({
                  "class": 'divider-vertical'
                });
                li(function() {
                  return a({
                    href: '#lab'
                  }, function() {
                    i({
                      "class": 'icon-headphones'
                    });
                    return text(' Lab');
                  });
                });
                li(function() {
                  return a({
                    href: '#practice'
                  }, function() {
                    i({
                      "class": 'icon-refresh'
                    });
                    return text(' Practice');
                  });
                });
                return li(function() {
                  return a({
                    href: '#achievements'
                  }, function() {
                    i({
                      "class": 'icon-trophy'
                    });
                    return text(' Achievements');
                  });
                });
              });
              return ul({
                "class": 'nav pull-right'
              }, function() {
                li({
                  "class": 'user'
                }, function() {
                  return span(function() {
                    i({
                      "class": 'icon-user'
                    });
                    return text(" " + (this.fullName()) + " ");
                  });
                });
                li({
                  "class": 'divider-vertical'
                });
                return li(function() {
                  return a({
                    href: '/studentLogout'
                  }, function() {
                    return i({
                      "class": 'icon-signout'
                    });
                  });
                });
              });
            });
          });
        });
      };

      return TopBar;

    })(Backbone.View);
    Controller = (function(_super) {

      __extends(Controller, _super);

      function Controller() {
        return Controller.__super__.constructor.apply(this, arguments);
      }

      Controller.prototype.initialize = function() {
        this.user = new Model(top.app.session.user);
        this.views = {
          topBar: new Views.TopBar({
            model: this.user
          }),
          lab: new App.Lab.Views.Main
        };
        return this.showTopBar();
      };

      Controller.prototype.routes = {
        '': 'home'
      };

      Controller.prototype.showTopBar = function() {
        return this.views.topBar.render().open();
      };

      Controller.prototype.home = function() {
        return this.clearViews('topBar');
      };

      return Controller;

    })(top.App.Controller);
    return _ref = [Controller], exports.Controller = _ref[0], _ref;
  });

}).call(this);
